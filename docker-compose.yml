version: "3"
services:
  message:
    build: message/
    image: message
    deploy:
      replicas: 4
    ports:
      - 80
    environment:
      - SERVICE_NAME=message-v1
    links:
      - messageapp
      - mongodb_message
      - replica_message
      - redis
      - credit
      - haproxy
    depends_on:
      - messageapp
      - mongodb_message
      - replica_message
      - redis
  message2_canary:
    build: message2/
    image: message2_canary
    deploy:
      replicas: 4
    ports:
      - 80
    environment:
      - SERVICE_NAME=message-v2
    links:
      - messageapp
      - mongodb_message
      - replica_message
      - redis
      - credit
      - haproxy
    depends_on:
      - messageapp
      - mongodb_message
      - replica_message
      - redis
  # message2:
  #   build: message/
  #   ports:
  #     - "9004:9007"
  #   links:
  #     - messageapp
  #     - mongodb_message
  #     - replica_message
  #     - redis
  #     - credit
  #   depends_on:
  #     - messageapp
  #     - mongodb_message
  #     - replica_message
  #     - redis
  # message3:
  #   build: message/
  #   ports:
  #     - "9005:9007"
  #   links:
  #     - messageapp
  #     - mongodb_message
  #     - replica_message
  #     - redis
  #     - credit
  #   depends_on:
  #     - messageapp
  #     - mongodb_message
  #     - replica_message
  #     - redis
  credit:
    build: credit/
    image: credit
    ports:
      - "9017:9017"
    links:
      - mongodb_credit
      - replica_credit
      - redis
    depends_on:
      - mongodb_credit
      - replica_credit
      - redis
  messageapp:
    image: cabify/backend-bootcamp-messageapp
    ports:
      - "3000:3000"

  mongodb_credit:
    image: mongo
    command:  
      - '--logpath'
      - '/var/log/mongodb/mongod-credit.log'
    volumes:
      - ./credit/data/db:/credit/data/db
    ports:
      - 27017:27017
  replica_credit:
    image: mongo
    command:  
      - '--logpath'
      - '/var/log/mongodb/mongod-credit-replica.log'   
    volumes:
      - ./credit/data/replica:/credit/data/replica
    ports:
      - 27018:27017

  mongodb_message:
    image: mongo
    command: 
      - '--logpath'
      - '/var/log/mongodb/mongod-message.log'
    volumes:
      - ./message/data/db:/message/data/db
    ports:
      - 27027:27017
  replica_message:
    image: mongo
    command:
      - '--logpath'
      - '/var/log/mongodb/mongod-replica-message.log'
    volumes:
      - ./message/data/replica:/message/data/replica
    ports:
      - 27028:27017

  redis:
    image: redis
    ports:
      - 6379:6379

  registrator:
    image: gliderlabs/registrator
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    command: -internal consul://consul:8500
    depends_on:
      - consul
    links:
      - consul
  consul: 
    image: consul
    command: "agent -server -bootstrap -ui -client=0.0.0.0 -bind='{{ GetPrivateIP }}'"
  haproxy:
    image: haproxy:1.8-alpine
    ports:
      - 48151:48151
    expose:
      - 80
    depends_on:
      - registrator
    links:
      - registrator
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
  # redis-commander:
  #   container_name: redis-commander
  #   image: rediscommander/redis-commander
  #   restart: always
  #   environment:
  #     - REDIS_HOSTS=local:redis:6379
  #   ports:
  #     - "8081:8081"
